//tag::buildscript[]
buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
        classpath "org.grails.plugins:hibernate5:${gormVersion}"
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.2'
    }
}
//end::buildscript[]
version "0.2"
group "grails.google.cloud"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
//tag::applyappengineplugin[]
apply plugin: 'com.google.cloud.tools.appengine'
//end::applyappengineplugin[]

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

//tag::configurationsexclude[]
configurations {
    compile.exclude module: "tomcat-juli"
    compile.exclude module: "spring-boot-starter-tomcat"
    compile.exclude group: "com.google.guava", module: "guava-jdk5"
}
//end::configurationsexclude[]


dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-jetty"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.5.7.Final"
    implementation "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.1.2-b03"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.grails:grails-web-testing-support"
    runtimeOnly "com.h2database:h2"
    testImplementation "org.grails.plugins:geb"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntimeOnly "net.sourceforge.htmlunit:htmlunit:2.18"
    //tag::msyql[]
    runtime 'mysql:mysql-connector-java:6.0.5'
    runtime 'com.google.cloud.sql:mysql-socket-factory-connector-j-6:1.0.3'
    //end::msyql[]
    //tag::cloudstorage[]
    compile 'com.google.cloud:google-cloud-storage:1.2.3'
    //end::cloudstorage[]
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
}

assets {
    minifyJs = true
    minifyCss = true
}

tasks.withType(Test) { useJUnitPlatform() }
